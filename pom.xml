<?xml version="1.0" encoding="UTF-8"?>
<!--

     Copyright (C) 2021 Gwinnett County Experimental Aircraft Association

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>org.eaa690</groupId>
	<artifactId>aerie</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<name>Aerie</name>
	<description>Various services for EAA 690</description>

	<properties>
		<java.version>11</java.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<cucumber.version>6.11.0</cucumber.version>
		<junit.version>4.13.2</junit.version>
		<rest-assured.version>4.4.0</rest-assured.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-quartz</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.2</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.2.32</version>
		</dependency>
		<dependency>
			<groupId>com.twilio.sdk</groupId>
			<artifactId>twilio</artifactId>
			<version>8.18.0</version>
		</dependency>
		<dependency>
			<groupId>com.ullink.slack</groupId>
			<artifactId>simpleslackapi</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.sendgrid</groupId>
			<artifactId>sendgrid-java</artifactId>
			<version>4.7.4</version>
		</dependency>
		<dependency>
			<groupId>com.github.javafaker</groupId>
			<artifactId>javafaker</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.14.2</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20210307</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>30.1.1-jre</version>
		</dependency>
		<dependency>
			<groupId>com.github.banana-j</groupId>
			<artifactId>bananaj</artifactId>
			<version>0.6.4</version>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>4.1.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-spring</artifactId>
			<version>${cucumber.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest-assured.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<reporting>
		<excludeDefaults>true</excludeDefaults>
		<plugins>
			<plugin>
				<groupId>org.openclover</groupId>
				<artifactId>clover-maven-plugin</artifactId>
				<configuration>
					<!-- Verify that we can modify the location of the Clover database and that the directory is created if
                         it doesn't exist. Note: we're putting the configuration here and not in the build section because the
                         build section inherits from the reporting section but not the other way around... -->
					<!--cloverDatabase>${project.build.directory}/customclover/myclover.db</cloverDatabase-->

					<!-- Verify that we can generate all types of Clover reports -->
					<generateHtml>true</generateHtml>
					<generatePdf>true</generatePdf>
					<generateXml>true</generateXml>

					<!-- We ask the Clover plugin to generate a historical report but we don't have any historical data saved.
                         This is to verify it doesn't error out when this is the case. -->
					<generateHistorical>true</generateHistorical>
					<!--useFullyQualifiedJavaLang>false</useFullyQualifiedJavaLang-->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.14.0</version>
				<configuration>
					<failOnViolation>true</failOnViolation>
					<printFailingErrors>true</printFailingErrors>
					<rulesets>
						<ruleset>/category/java/bestpractices.xml</ruleset>
					</rulesets>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>11</source>
					<target>11</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<source>11</source>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>3.1.12.2</version>
				<configuration>
					<excludeFilterFile>
						${project.build.directory}/classes/spotbugs-exclude.xml
					</excludeFilterFile>
					<effort>Max</effort>
					<threshold>Low</threshold>
					<xmlOutput>true</xmlOutput>
					<!-- Ensures spotbugs does not run against the instrumented code created by clover. -->
					<classFilesDirectory>${project.build.outputDirectory}</classFilesDirectory>
				</configuration>
				<executions>
					<execution>
						<id>analyze-bugs</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven-dependency-plugin.version}</version>
				<configuration>
					<!-- Ignore runtime-only dependencies in analysis -->
					<ignoreNonCompile>true</ignoreNonCompile>
					<failOnWarning>false</failOnWarning>
					<ignoredDependencies>
						<ignoredDependency>org.slf4j:slf4j-simple</ignoredDependency>
					</ignoredDependencies>
				</configuration>
				<executions>
					<execution>
						<id>analyze-dependencies</id>
						<phase>verify</phase>
						<goals>
							<goal>analyze-only</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.8.1</version>
				<executions>
					<execution>
						<id>analyze-dependency-updates</id>
						<phase>compile</phase>
						<goals>
							<goal>display-dependency-updates</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<header>${project.basedir}/src/license/license-header.txt</header>
					<properties>
						<owner>${project.organization.name}</owner>
					</properties>
					<mapping>
						<java>SLASHSTAR_STYLE</java>
					</mapping>
					<headerDefinitions>
						<headerDefinition>${project.basedir}/src/license/license-header-style.xml</headerDefinition>
					</headerDefinitions>
					<includes>
						<include>src/main/**/*</include>
						<include>src/test/**/*</include>
						<include>pom.xml</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>add-licenses</id>
						<phase>process-sources</phase>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-checkstyle-plugin</artifactId>
			<version>3.1.2</version>
			<dependencies>
				<dependency>
					<groupId>com.puppycrawl.tools</groupId>
					<artifactId>checkstyle</artifactId>
					<version>8.45.1</version>
				</dependency>
			</dependencies>
			<configuration>
			<checkstyleRules>
			<module name="Checker">
			<module name="LineLength">
				<property name="max" value="120"/>
			</module>
			<module name="JavadocPackage">
				<property name="allowLegacy" value="true"/>
			</module>
			<module name="NewlineAtEndOfFile"/>
			<module name="Translation"/>
			<module name="FileLength"/>
			<module name="FileTabCharacter">
				<property name="eachLine" value="true"/>
			</module>
			<module name="RegexpSingleline">
				<property name="format" value="\s+$"/>
				<property name="message" value="Line has trailing spaces."/>
			</module>
			<module name="TreeWalker">
			<!-- property name="cacheFile" value="${checkstyle.cache.file}"/ -->
			<module name="SuppressWarningsHolder"/>
			<module name="JavadocMethod"/>
			<module name="JavadocType"/>
			<module name="JavadocVariable"/>
			<module name="JavadocStyle"/>
			<module name="ConstantName"/>
			<module name="LocalFinalVariableName"/>
			<module name="LocalVariableName"/>
			<module name="MemberName"/>
			<module name="MethodName"/>
			<module name="PackageName"/>
			<module name="ParameterName"/>
			<module name="StaticVariableName"/>
			<module name="TypeName"/>
			<module name="AvoidStarImport"/>
			<module name="IllegalImport"/> <!-- defaults to sun.* packages -->
			<module name="RedundantImport"/>
			<module name="UnusedImports"/>
			<module name="MethodLength"/>
			<module name="ParameterNumber"/>
			<module name="EmptyForIteratorPad"/>
			<module name="MethodParamPad"/>
			<module name="NoWhitespaceAfter"/>
			<module name="NoWhitespaceBefore"/>
			<module name="OperatorWrap"/>
			<module name="ParenPad"/>
			<module name="TypecastParenPad"/>
			<module name="WhitespaceAfter"/>
			<module name="WhitespaceAround"/>
			<module name="ModifierOrder"/>
			<module name="RedundantModifier"/>
			<module name="AvoidNestedBlocks"/>
			<module name="EmptyBlock"/>
			<module name="LeftCurly"/>
				<module name="NeedBraces"/>
				<module name="RightCurly"/>
				<module name="AvoidInlineConditionals"/>
				<module name="EmptyStatement"/>
				<module name="EqualsHashCode"/>
				<module name="HiddenField"/>
				<module name="IllegalInstantiation"/>
				<module name="InnerAssignment"/>
				<module name="MagicNumber"/>
				<module name="MissingSwitchDefault"/>
				<module name="SimplifyBooleanExpression"/>
				<module name="SimplifyBooleanReturn"/>
				<module name="DesignForExtension"/>
				<!-- module name="FinalClass"/ -->
				<!-- module name="HideUtilityClassConstructor"/ -->
				<module name="InterfaceIsType"/>
				<module name="VisibilityModifier"/>
				<module name="ArrayTypeStyle"/>
				<module name="FinalParameters"/>
				<module name="TodoComment"/>
				<module name="UpperEll"/>
			</module>
				<module name="SuppressWarningsFilter"/>
				<module name="UniqueProperties"/>
			</module>
			</checkstyleRules>
				<consoleOutput>true</consoleOutput>
				<failOnViolation>true</failOnViolation>
				<includeResources>false</includeResources>
				<includeTestSourceDirectory>false</includeTestSourceDirectory>
				<!-- Only check the actual source directories in src, not anything generated in target. -->
				<sourceDirectories>
					<sourceDirectory>src/main/java</sourceDirectory>
				</sourceDirectories>
				<testSourceDirectories>
					<testSourceDirectory>src/test/java</testSourceDirectory>
				</testSourceDirectories>
			</configuration>
				<executions>
					<!--
  Execute checkstyle after compilation but before tests.
  This ensures that any parsing or type checking errors are from
  javac, so they look as expected. Beyond that, we want to
  fail as early as possible.
-->
					<execution>
						<phase>test-compile</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.openclover</groupId>
				<artifactId>clover-maven-plugin</artifactId>
				<version>4.4.1</version>
				<configuration>
					<!--includesTestSourceRoots>false</includesTestSourceRoots-->
					<targetPercentage>30%</targetPercentage>
					<generatePdf>true</generatePdf>
					<generateHtml>true</generateHtml>
					<!-- Verify that we can specify the JDK version for Clover's instrumentation -->
					<jdk>1.9</jdk>
					<!-- Verify that we can exclude some files from the instrumentation. Make sure the file we are excluding
                       is referenced by other classes to ensure excluding is only done at the Clover level -->
					<excludes>
						<exclude>**/*Test.java</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>main</id>
						<phase>verify</phase>
						<goals>
							<goal>instrument</goal>
							<goal>check</goal>
						</goals>
					</execution>
					<execution>
						<id>site</id>
						<phase>pre-site</phase>
						<goals>
							<goal>instrument</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
